package projet;
import java.util.Scanner;

public class Jeu {
	private final static int vide=0;
	private final static int jaune=1;
	private final static int rouge=2;
	private static Scanner clavier= new Scanner(System.in);
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[][] grille=new int[6][7];
		System.out.println ("1.Homme Vs Homme");
		System.out.println ("2.Homme Vs Machine");
		System.out.println ("3.Machine Vs Homme");
		System.out.println ("4.Machine Vs Machine");
		System.out.println ("Choisissez un mode de jeu :");
		int modejeu= clavier.nextInt();
		if (modejeu==1) {
		      initialiser(grille);
		      afficher(grille);
		      int couleurJoueur=jaune;
		      boolean gagne;
		      do {
			      demanderEtJouer(grille,couleurJoueur);
		          afficher(grille);
		          gagne=estCeGagne(grille,couleurJoueur);
		          //c'est au prochain joueur de jouer :
		          if(couleurJoueur==jaune) {
		    	      couleurJoueur=rouge;
		          }else {
		    	      couleurJoueur=jaune;
		          }
		      }while (!gagne && !plein(grille));
		      if (gagne) {
			      //attention, on a chang� la couleur pour la couleur de l'autre joueur !
		          if (couleurJoueur==jaune) {
			          System.out.println("Le joueur O a gagn� !");
		          }else {
		    	       System.out.println("Le joueur X a gagn� !");
		          }
		      }else {
			       System.out.println("Il y a match nul !");
		      } 
		}else if (modejeu==2) {
		    initialiser(grille);
		      afficher(grille);
		      int couleurJoueur=jaune;
		      boolean gagne;
		      do {
			      demanderEtJouer(grille,couleurJoueur);
		          afficher(grille);
		          gagne=estCeGagne(grille,couleurJoueur);
		          //c'est � la machine de jouer :
		    	  couleurJoueur=rouge;
		    	  Machinejoue(grille,couleurJoueur);
                  afficher(grille);
                  gagne=estCeGagne(grille,couleurJoueur);
                  couleurJoueur=jaune;
		      }while (!gagne && !plein(grille));
		      if (gagne) {
			      //attention, on a chang� la couleur pour la couleur de l'autre joueur !
		          if (couleurJoueur==jaune) {
			          System.out.println("Le joueur O a gagn� !");
		          }else {
		    	       System.out.println("Le joueur X a gagn� !");
		          }
		      }else {
			       System.out.println("Il y a match nul !");
		      } 
		}else if (modejeu==3) {
		    initialiser(grille);
		      afficher(grille);
		      int couleurJoueur=jaune;
		      boolean gagne;
		      do {
		    	  Machinejoue(grille,couleurJoueur);
		    	  afficher(grille);
		    	  estCeGagne(grille,couleurJoueur);
		    	  couleurJoueur=rouge;
		    	  // C'est � l'Homme de jouer :
			      demanderEtJouer(grille,couleurJoueur);
		          afficher(grille);
		          gagne=estCeGagne(grille,couleurJoueur);
		    	  couleurJoueur=jaune;
		          
		      }while (!gagne && !plein(grille));
		      if (gagne) {
			      //attention, on a chang� la couleur pour la couleur de l'autre joueur !
		          if (couleurJoueur==jaune) {
			          System.out.println("Le joueur O a gagn� !");
		          }else {
		    	       System.out.println("Le joueur X a gagn� !");
		          }
		      }else {
			       System.out.println("Il y a match nul !");
		      } 
		}else {
		    initialiser(grille);
		      afficher(grille);
		      int couleurJoueur=jaune;
		      boolean gagne;
		      do {
			      Machinejoue(grille,couleurJoueur);
		          afficher(grille);
		          gagne=estCeGagne(grille,couleurJoueur);
		          if(couleurJoueur==jaune) {
		    	      couleurJoueur=rouge;
		          }else {
		    	      couleurJoueur=jaune;
		          }
		    	  
		      }while (!gagne && !plein(grille));
		      if (gagne) {
			      //attention, on a chang� la couleur pour la couleur de l'autre joueur !
		          if (couleurJoueur==jaune) {
			          System.out.println("Le joueur O a gagn� !");
		          }else {
		    	       System.out.println("Le joueur X a gagn� !");
		          }
		      }else {
			       System.out.println("Il y a match nul !");
		      } 
		}
	}
	
	public static void initialiser(int [][]grille) {
		for (int i=0; i< grille.length; i++) {
			for (int j=0; j<grille[i].length; j++) {
				grille[i][j]=vide;		
			}
		}
	}
	// on affiche O pour une case rouge, X pour une case jaune :
	public static void afficher(int [][]grille) {
		for (int i=0; i< grille.length; i++) {
			System.out.print("|");
			for (int j=0; j<grille[i].length; j++) {
				if (grille[i][j]==vide) {
					System.out.print('_');
				}else if (grille[i][j]== jaune) {
					System.out.print('X');
				}else {
					System.out.print('O');
				}
				System.out.print('|');
			}
			System.out.println();
		}
		System.out.println('=');
		for (int i=1; i<=grille[0].length; i++) {
			System.out.print("="+ i);
		}
		System.out.println("==\n");
	}
	
	public static boolean jouer(int [][]grille, int colonne,int couleur) {
		//si la colonne est pleine, le coup n'est pas valide :
		if (grille[0][colonne]!=vide) {
			return false;
		}
		//on parcourt la colonne du bas jusqu'� la premi�re case vide :
		int ligne=grille.length-1;
		while (grille[ligne][colonne]!=vide) { 
			--ligne;
		}
		//on remplit la case vide trouv�e :
		grille[ligne][colonne]=couleur;
		return true;
	}
	
	public static void demanderEtJouer(int[][] grille,int couleurJoueur) {
		boolean valide;
		do {
		     System.out.print("Joueur ");
		     if(couleurJoueur==jaune) {
			     System.out.print("X");
		     }else {
			 System.out.print("O");
		     }
		     System.out.print(" : entrez un num�ro de colonne :");
	         int colonne=clavier.nextInt();
	         --colonne;// car les indices des tableaux java commencent par 0
	         valide=jouer(grille,colonne,couleurJoueur);
	         if(!valide) {
	    	     System.out.println("Ce coup n'est pas valide !");
	         }
		}while(!valide);
	}
	
	public static boolean estCeGagne (int [][] grille, int couleurJoueur) {
		for (int ligne=0; ligne< grille.length; ++ligne) {
			for (int colonne=0; colonne<grille[ligne].length; ++colonne) {
				//pour chaque case contenant un pion de la bonne couleur,
				//on compte les pions de la m�me couleur dans 4 directions : 
				int couleurCase=grille[ligne][colonne];
				final int ligneMax=grille.length-4;
				final int colonneMax=grille[ligne].length-4;
				if (couleurCase==couleurJoueur) {
					if (
							//en diagonale, vers le haut et la droite :
							(ligne>=3 && colonne<= colonneMax &&
							compter(grille,ligne,colonne,-1,+1)>=4)||
							//horizontalement, vers la droite :
							(colonne<=colonneMax && compter(grille,ligne,colonne,0,+1)>=4)||
							//en diagonale, vers le bas et la droite :
							(ligne<=ligneMax && colonne<=colonneMax &&
							compter(grille,ligne,colonne,+1,+1)>=4)||
							//verticalement, vers le bas :
							(ligne<=ligneMax && compter(grille,ligne,colonne,+1,0)>=4)
							) {
						return true;
					}
						}
				}
					
		}
		//si on a parcouru toutes les directions sans que le nombre de pions align�s d�passe 4,
		//le joueur n'a pas encore gagne :
		return false;
	}
	
	public static int compter (int[][] grille, int ligDepart, int colDepart,
	                           int dirLigne,int dirColonne){
		int compteur=0;
		int ligne = ligDepart;
		int colonne = colDepart;
		//on part de la case (ligDepart,colDepart) et on parcourt la grille
		//dans la direction donn�e par (dirLigne,dirColonne)
		//tant qu'on trouve des pions de la m�me couleur que le pion de d�part :
		while (grille[ligne][colonne]==grille[ligDepart][colDepart] && 
				ligne>=0 && ligne<grille.length &&
				colonne>=0 && colonne<grille[ligne].length) {
			++compteur;
			ligne  =ligne  + dirLigne;
			colonne=colonne+dirColonne;
		}
	    return compteur;  
	 }
	
	public static boolean plein(int [][] grille) {
		//si on trouve une case vide sur la 1�re ligne, la grille n'est pas pleine :
		for (int cellule : grille[0]) {
			if (cellule==vide) {
				return false;
			}	
	    }
		//sinon, la grille est pleine :
		return true;
	}
	
	public static void Machinejoue(int[][] grille,int couleurJoueur) {
		boolean valide=true;
		int colonne=0;
		do {
	               valide=jouer(grille,colonne,couleurJoueur);
	               colonne ++;
		}while(!valide);
	}
}

